## Packages
- Dependencies:
  - Zod -> Schema declaration and validation library 
  - Express -> Web server framework 
  - Winston -> Logging 
  - Bcrypt -> Password hashing 

- Dev Dependencies:
  - @types/express -> Type definitions for express 
  - Prisma -> ORM Database 
  - @types/bcrypt -> Type definitions for bcrypt
  - @types/jest -> Type definitions for Jest
  - @babel/preset-env -> Compile Jest 
  - @types/supertest -> Type definitions for supertest
  - typescript -> Typescript superset

- Setup Typescript for Jest:
  - @babel/preset-typescript -> Preset for Typescript
  - @jest/globals -> Set Jest as global functions in Typescript

## Workflow
1. Create API Spesification -> Keuntungannya adalah kita akan selalu membuat aplikasinya mengikuti kontrak dari si API yang kita buat. Kesepakatan antara tim FE dan BE. Create docs/user.md
2. Setup Database (Prisma)
3. Setup Winston (Logging)
4. Setup Express
5. Setup Prisma Logging (Even-Based Combo with Winston)
6. Structure Folder:
  - Controller -> Request untuk handler web. Hanya akan menerima request, business logic nya service yang akan menangani.
  - Service -> Menerima logic ke database dan lain-lain.
  - Model -> Menyimpan data dari hasil request dan response.
  - Validation -> Validasi.
  - Error -> Error Handling.
  - Routes -> API Endpoint.
  - Middlewares -> Middlewares.
  - Types -> It adds an optional user property to the Request object.
7. Register User API
8. Login User API
9. Get User API (auth-middleware -> Middleware untuk menerima token)
10. Update User API
11. Delete User API
12. Create Contact API
13. Get Contact API
14. Update Contact API
15. Remove Contact API
16. Search Contact API
17. Create Address API
18. Get Address API